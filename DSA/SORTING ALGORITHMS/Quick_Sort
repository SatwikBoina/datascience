def quick_sort(arr,left,right):
    if left < right :
        pivot_index = pivot_find(arr,left,right)
        quick_sort(arr,left,pivot_index-1)
        quick_sort(arr,pivot_index+1,right)
    
    return arr
    
def pivot_find(arr,left,right):

    i = left
    j = right-1

    while i < j:
        while arr[i]<arr[right]:
            i+=1
        while arr[j]>arr[right]:
            j-=1

        if i < j :
            arr[i],arr[j] = arr[j],arr[i]
    if arr[i]>arr[right]:
        arr[i],arr[right] = arr[right],arr[i]
    return i

    


swap_nums = lambda x, y: (y, x)

if __name__ == "__main__":
    # Read input from IP_OP/input.txt
    with open("IP_OP/input.txt", "r") as input_file:
        lines = input_file.read().splitlines()

    results = []
    for line in lines:
        try:
            # Convert the line to a list (e.g., "[1, 2, 3]" -> [1, 2, 3])
            array = eval(line)
            sorted_array = quick_sort(array,0,len(array)-1)
            results.append(str(sorted_array))
        except Exception as e:
            results.append(f"Error: {e}")

    # Write output to IP_OP/output.txt
    with open("IP_OP/output.txt", "w") as output_file:
        output_file.write("\n".join(results))






